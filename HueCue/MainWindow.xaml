<Window x:Class="HueCue.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HueCue"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel, IsDesignTimeCreatable=False}"
        Style="{StaticResource MaterialDesignWindow}"
        Height="450" Width="800">
  <Window.Resources>
    <local:BoolToPlayPauseTextConverter x:Key="PlayPauseTextConverter"/>
    <local:HistogramOverlayToBooleanConverter x:Key="HistogramOverlayToBooleanConverter" />
  </Window.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition />
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

    <Menu>
      <MenuItem Header="_File">
        <MenuItem Header="_Open Video..." Command="{Binding OpenVideoFileCommand}"/>
        <Separator />
        <MenuItem Header="E_xit" Command="{x:Static ApplicationCommands.Close}"/>
      </MenuItem>
      <MenuItem Header="_View">
        <MenuItem Header="Overlay Histogram" IsCheckable="True" 
                  CommandParameter="{x:Static local:HistogramOverlay.Overlay}"
                  Command="{Binding SetOverlayCommand}"
                  IsChecked="{Binding Overlay, Converter={StaticResource HistogramOverlayToBooleanConverter}, ConverterParameter={x:Static local:HistogramOverlay.Overlay}, Mode=OneWay}"
                  />
        <MenuItem Header="Side by Side Histogram" IsCheckable="True" 
                  CommandParameter="{x:Static local:HistogramOverlay.Right}"
                  Command="{Binding SetOverlayCommand}"
                  IsChecked="{Binding Overlay, Converter={StaticResource HistogramOverlayToBooleanConverter}, ConverterParameter={x:Static local:HistogramOverlay.Right}, Mode=OneWay}"
                  />

        <MenuItem Header="Stacked Histogram" IsCheckable="True" 
                  CommandParameter="{x:Static local:HistogramOverlay.Below}"
                  Command="{Binding SetOverlayCommand}"
                  IsChecked="{Binding Overlay, Converter={StaticResource HistogramOverlayToBooleanConverter}, ConverterParameter={x:Static local:HistogramOverlay.Below}, Mode=OneWay}"
                  />
        <Separator />
        <MenuItem Header="Enable Face Detection" IsCheckable="True" 
                  IsChecked="{Binding FaceDetectionEnabled}"
                  Command="{Binding ToggleFaceDetectionCommand}"
                  IsEnabled="{Binding FaceDetectionAvailable}"/>
      </MenuItem>
      <MenuItem Header="_Playback">
        <MenuItem Header="{Binding IsPlaying, Converter={StaticResource PlayPauseTextConverter}}" 
                  Command="{Binding PlayPauseCommand}" 
                  IsEnabled="{Binding HasVideo}"/>
        <MenuItem Header="_Skip Forward" Command="{Binding SkipCommand}" CommandParameter="300" IsEnabled="{Binding HasVideo}"/>
        <MenuItem Header="_Skip Backward" Command="{Binding SkipCommand}" CommandParameter="-30" IsEnabled="{Binding HasVideo}"/>
      </MenuItem>
    </Menu>
    
    
    <!-- Main content area with video and histogram -->
    <Grid Grid.Row="1">
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition>
          <RowDefinition.Style>
            <Style TargetType="RowDefinition">
              <Style.Triggers>
                <DataTrigger Binding="{Binding Overlay}" Value="{x:Static local:HistogramOverlay.Overlay}">
                  <Setter Property="Height" Value="0" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Overlay}" Value="{x:Static local:HistogramOverlay.Right}">
                  <Setter Property="Height" Value="0" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Overlay}" Value="{x:Static local:HistogramOverlay.Below}">
                  <Setter Property="Height" Value="*" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </RowDefinition.Style>
        </RowDefinition>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition>
          <ColumnDefinition.Style>
            <Style TargetType="ColumnDefinition">
              <Style.Triggers>
                <DataTrigger Binding="{Binding Overlay}" Value="{x:Static local:HistogramOverlay.Overlay}">
                  <Setter Property="Width" Value="0" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Overlay}" Value="{x:Static local:HistogramOverlay.Right}">
                  <Setter Property="Width" Value="*" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Overlay}" Value="{x:Static local:HistogramOverlay.Below}">
                  <Setter Property="Width" Value="0" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </ColumnDefinition.Style>
        </ColumnDefinition>
      </Grid.ColumnDefinitions>
      <!-- Video player -->
      <Image x:Name="VideoImage" 
             Source="{Binding VideoSource}"
             Stretch="Fill"
             HorizontalAlignment="Center"
             VerticalAlignment="Center"/>
      
      <!-- Histogram overlay -->
      <Image x:Name="HistogramImage"
             Source="{Binding HistogramSource}"
             Stretch="Fill"
             Margin="10"
             Opacity="0.8">
        <Image.Style>
          <Style TargetType="Image">
            <Style.Triggers>
              <DataTrigger Binding="{Binding Overlay}" Value="{x:Static local:HistogramOverlay.Overlay}">
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="Grid.Row" Value="0" />
                <Setter Property="Width" Value="{Binding ActualWidth, ElementName=VideoImage}" />
                <Setter Property="Height" Value="{Binding ActualHeight, ElementName=VideoImage}" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Overlay}" Value="{x:Static local:HistogramOverlay.Right}">
                <Setter Property="Grid.Column" Value="1" />
                <Setter Property="Grid.Row" Value="0" />
                <Setter Property="Height" Value="{Binding ActualHeight, ElementName=VideoImage}" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Overlay}" Value="{x:Static local:HistogramOverlay.Below}">
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="Grid.Row" Value="1" />
                <Setter Property="Width" Value="{Binding ActualWidth, ElementName=VideoImage}" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Image.Style>
      </Image>

      <!-- Status text when no video is loaded -->
      <TextBlock Text="No video loaded. Use File > Open Video... to load a video file."
                 FontSize="16"
                 Foreground="Gray"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 TextWrapping="Wrap"
                 MaxWidth="400"
                 TextAlignment="Center">
        <TextBlock.Style>
          <Style TargetType="TextBlock">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding HasVideo}" Value="False">
                <Setter Property="Visibility" Value="Visible"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </TextBlock.Style>
      </TextBlock>
    </Grid>

    <!-- Status bar -->
    <StatusBar Grid.Row="2">
      <StatusBarItem>
        <TextBlock Text="{Binding CurrentVideoFile}" />
      </StatusBarItem>
      <Separator />
      <StatusBarItem>
        <TextBlock>
          <TextBlock.Style>
            <Style TargetType="TextBlock">
              <Setter Property="Text" Value="Face detection unavailable" />
              <Style.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding FaceDetectionAvailable}" Value="True" />
                    <Condition Binding="{Binding FaceDetectionEnabled}" Value="False" />
                  </MultiDataTrigger.Conditions>
                  <Setter Property="Text" Value="Face detection disabled" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding FaceDetectionAvailable}" Value="True" />
                    <Condition Binding="{Binding FaceDetectionEnabled}" Value="True" />
                  </MultiDataTrigger.Conditions>
                  <Setter Property="Text" Value="{Binding DetectedFaceCount, StringFormat='Faces detected: {0}'}" />
                </MultiDataTrigger>
              </Style.Triggers>
            </Style>
          </TextBlock.Style>
        </TextBlock>
      </StatusBarItem>
    </StatusBar>
  </Grid>
</Window>
